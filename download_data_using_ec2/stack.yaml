AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC with a public subnet, an EC2 instance configured for SSM access, and an S3 bucket with full access granted to the EC2 instance.

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project to be used as the base for resource names.
    AllowedPattern: '[a-zA-Z0-9-]+'
    ConstraintDescription: 'ProjectName can contain only alphanumeric characters and hyphens.'
    Default: copy-public-data-to-aws

  RandomString:
    Type: String
    Default: s3306b4osc10

Resources:
#  VPC:
#    Type: 'AWS::EC2::VPC'
#    Properties:
#      CidrBlock: 10.0.0.0/26
#      EnableDnsSupport: true
#      EnableDnsHostnames: true
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-VPC'
#
#  InternetGateway:
#    Type: 'AWS::EC2::InternetGateway'
#    Properties:
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-IGW'
#
#  VPCGatewayAttachment:
#    Type: 'AWS::EC2::VPCGatewayAttachment'
#    Properties:
#      VpcId: !Ref VPC
#      InternetGatewayId: !Ref InternetGateway
#
#  PublicSubnet:
#    Type: 'AWS::EC2::Subnet'
#    Properties:
#      VpcId: !Ref VPC
#      CidrBlock: 10.0.0.0/26
#      MapPublicIpOnLaunch: true
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-PublicSubnet'
#
#  PublicRouteTable:
#    Type: 'AWS::EC2::RouteTable'
#    Properties:
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-PublicRouteTable'
#
#  PublicRoute:
#    Type: 'AWS::EC2::Route'
#    Properties:
#      RouteTableId: !Ref PublicRouteTable
#      DestinationCidrBlock: 0.0.0.0/0
#      GatewayId: !Ref InternetGateway
#
#  SubnetRouteTableAssociation:
#    Type: 'AWS::EC2::SubnetRouteTableAssociation'
#    Properties:
#      SubnetId: !Ref PublicSubnet
#      RouteTableId: !Ref PublicRouteTable
#
#  InstanceSecurityGroup:
#    Type: 'AWS::EC2::SecurityGroup'
#    Properties:
#      GroupDescription: Enable SSM access and intra-group communication
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-SG'
#
#  AllTrafficEgressRule:
#    Type: 'AWS::EC2::SecurityGroupEgress'
#    Properties:
#      GroupId: !Ref InstanceSecurityGroup
#      IpProtocol: -1
#      FromPort: -1
#      ToPort: -1
#      CidrIp: 0.0.0.0/0
#      Description: Allow all outbound traffic.
#
#  SelfReferencingIngress:
#    Type: 'AWS::EC2::SecurityGroupIngress'
#    Properties:
#      Description: Allows internal communication.
#      GroupId: !Ref InstanceSecurityGroup
#      IpProtocol: -1
#      FromPort: -1
#      ToPort: -1
#      SourceSecurityGroupId: !Ref InstanceSecurityGroup

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${ProjectName}-${RandomString}'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${RandomString}-S3Bucket'

#  EC2InstanceRole:
#    Type: 'AWS::IAM::Role'
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service: ec2.amazonaws.com
#            Action: sts:AssumeRole
#      ManagedPolicyArns:
#        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
#      Policies:
#        - PolicyName: S3FullAccessPolicy
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action: 's3:List*'
#                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 's3:GetObject'
#                  - 's3:PutObject'
#                  - 's3:DeleteObject'
#                Resource: !Sub '${S3Bucket.Arn}/*'
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-EC2Role'


#  EC2InstanceProfile:
#    Type: 'AWS::IAM::InstanceProfile'
#    Properties:
#      Roles:
#        - !Ref EC2InstanceRole

#  EC2Instance:
#    Type: 'AWS::EC2::Instance'
#    Properties:
#      InstanceType: r5.4xlarge
#      ImageId: ami-047d2b009ba8740aa
#      IamInstanceProfile: !Ref EC2InstanceProfile
#      SecurityGroupIds:
#        - !Ref InstanceSecurityGroup
#      SubnetId: !Ref PublicSubnet
#      BlockDeviceMappings:
#        - DeviceName: /dev/xvda
#          Ebs:
#            VolumeSize: 128
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}-EC2Instance'
#      UserData:
#        Fn::Base64: !Sub |
#          #!/bin/bash
#          sudo mkdir -p /tmp/kaggle_dataset
#          sudo cd /tmp/kaggle_dataset
#          sudo curl -L -o steam_reviews_2021.zip "https://www.kaggle.com/api/v1/datasets/download/najzeko/steam-reviews-2021"
#          sudo unzip steam_reviews_2021.zip
#          aws s3 cp steam_reviews.csv s3://copy-public-data-to-aws-s3306b4osc10/
#
#  EBSVolume:
#    Type: 'AWS::EC2::Volume'
#    Properties:
#      AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone
#      Size: 128
#      VolumeType: gp2
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-${RandomString}'
#
#  VolumeAttachment:
#    Type: 'AWS::EC2::VolumeAttachment'
#    Properties:
#      InstanceId: !Ref EC2Instance
#      VolumeId: !Ref EBSVolume
#      Device: /dev/sdh

Outputs:
#  VPCId:
#    Description: ID of the VPC
#    Value: !Ref VPC
#
#  PublicSubnetId:
#    Description: ID of the public subnet
#    Value: !Ref PublicSubnet

#  EC2InstanceId:
#    Description: ID of the EC2 instance
#    Value: !Ref EC2Instance
#
#  EC2InstancePublicIP:
#    Description: Public IP address of the EC2 instance
#    Value: !GetAtt EC2Instance.PublicIp

  S3BucketName:
    Description: Name of the S3 bucket
    Value: !Ref S3Bucket

  S3BucketArn:
    Description: ARN of the S3 bucket
    Value: !GetAtt S3Bucket.Arn

#  EBSVolumeId:
#    Description: ID of the EBS volume
#    Value: !Ref EBSVolume
#
#  EBSVolumeDevice:
#    Description: Device name of the attached EBS volume
#    Value: /dev/sdh