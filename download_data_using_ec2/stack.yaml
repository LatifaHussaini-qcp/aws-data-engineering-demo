AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC with a public subnet, an EC2 instance configured for SSM access, and an S3 bucket with full access granted to the EC2 instance.

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project to be used as the base for resource names.
    AllowedPattern: '[a-zA-Z0-9-]+'
    ConstraintDescription: 'ProjectName can contain only alphanumeric characters and hyphens.'
    Default: copy-public-data-to-aws

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/26
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-VPC'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-IGW'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/26
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PublicSubnet'

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-PublicRouteTable'

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSM access and intra-group communication
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-SG'

  AllTrafficEgressRule:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref InstanceSecurityGroup
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      CidrIp: 0.0.0.0/0
      Description: Allow all outbound traffic.

  SelfReferencingIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: Allows internal communication.
      GroupId: !Ref InstanceSecurityGroup
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref InstanceSecurityGroup

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${ProjectName}-${AWS::StackName}-bucket'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-S3Bucket'

  EC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: S3FullAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 's3:List*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource: !Sub '${S3Bucket.Arn}/*'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-EC2Role'


  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref EC2InstanceRole

#  EC2Instance:
#    Type: 'AWS::EC2::Instance'
#    Properties:
#      InstanceType: t3.micro
#      ImageId: ami-047d2b009ba8740aa
#      IamInstanceProfile: !Ref EC2InstanceProfile
#      SecurityGroupIds:
#        - !Ref InstanceSecurityGroup
#      SubnetId: !Ref PublicSubnet
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}-EC2Instance'

Outputs:
  VPCId:
    Description: ID of the VPC
    Value: !Ref VPC

  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet

#  EC2InstanceId:
#    Description: ID of the EC2 instance
#    Value: !Ref EC2Instance
#
#  EC2InstancePublicIP:
#    Description: Public IP address of the EC2 instance
#    Value: !GetAtt EC2Instance.PublicIp

  S3BucketName:
    Description: Name of the S3 bucket
    Value: !Ref S3Bucket

  S3BucketArn:
    Description: ARN of the S3 bucket
    Value: !GetAtt S3Bucket.Arn